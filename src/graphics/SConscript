import os

output    = "libilgraphics"
src_dir   = "#src/graphics"
build_dir = "#build"
inputs    = "*.c api/*.c gui/*.c"

Import("platform")
Import("env")
Import("libilutil")
Import("libilmath")
Import("libilcommon")

graphics = env.Clone()

graphics.Append(CPPPATH = src_dir, LIBS=["ilcommon","ilutil","ilmath"])

pkg_libs = {
    "osx":   ["libglfw", "glew"],
    "arch":  ["libglfw", "glew", "gl"],
    "linux": ["gl", "glfw", "glew"],
}

if platform=="mingw":
    graphics.Append(LIBS=["glfw", "glew32", "opengl32", "png", "z"])
else:
    for lib in pkg_libs[platform]:
        graphics.ParseConfig("pkg-config " + lib + " --cflags --libs")


sources = []
for module in Split(inputs) :
    sources.extend(Glob(module))

libilgraphics = graphics.SharedLibrary(target = build_dir + "/" + output, 
                                       source = sources)
Depends(libilgraphics, libilutil)
Depends(libilgraphics, libilmath)
Depends(libilgraphics, libilcommon)

Return("libilgraphics")

